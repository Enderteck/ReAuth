buildscript {
    repositories {
        maven { url = "https://maven.minecraftforge.net" }
        maven { url = "https://maven.parchmentmc.org" }
        mavenCentral()
    }
    dependencies {
        classpath group: "net.minecraftforge.gradle", name: "ForgeGradle", version: "5.1.+", changing: true
        classpath "org.parchmentmc:librarian:1.+"
    }
}
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
plugins {
    id "eclipse"
    id "idea"
}
apply plugin: "net.minecraftforge.gradle"
apply plugin: "org.parchmentmc.librarian.forgegradle"


version = "${Major}.${Patch}"
group = "${Author}"
archivesBaseName = "${ModName}-${MCVersion}-Forge"

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty "java.version"}, JVM: ${System.getProperty "java.vm.version"} (${System.getProperty "java.vendor"}), Arch: ${System.getProperty "os.arch"}"
minecraft {
    mappings channel: "parchment", version: "1.18.1-2022.03.06-1.18.2"

    runs {
        client {
            workingDirectory project.file("run")
            property "forge.logging.markers", ""
            property "forge.logging.console.level", "debug"
            property "forge.enabledGameTestNamespaces", "reauth"

            mods {
                reauth {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets {
    main {
        java.srcDirs += "src/common/java"
        resources.srcDirs += "src/common/resources"
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir "src/generated/resources" }

dependencies {
    minecraft "net.minecraftforge:forge:1.18.2-40.0.5"
    implementation "org.jetbrains:annotations:16.0.2"
}

jar {
    manifest {
        attributes([
            "Specification-Title"     : "${ModID}",
            "Specification-Vendor"    : "${Author}",
            "Specification-Version"   : "${version}",
            "Implementation-Title"    : "${ModName}",
            "Implementation-Version"  : "${version}",
            "Implementation-Vendor"   : "${Author}",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

ext {
    autoSignProfile = "reauth"
    autoSignTarget = tasks.jar.archivePath
}
